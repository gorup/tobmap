namespace tobmapgraph;
enum RoadInteraction : byte {
    None = 0,
    Yield = 1,
    StopSign = 2,
    TrafficLight = 3,
}

struct Interactions {
    incoming:RoadInteraction;
    outgoing:RoadInteraction;
}

// A node represents a real-world intersection
table Node {
  cell_id:uint64;

  // related edges, with their interactions for 
  // incoming, outgoing pairs
  edges:[uint32];
  interactions:[Interactions];
}

// An edge represents a way (street, path, etc.) between two nodes
struct Edge {
  cell_id:uint64;

  point_1_node_idx:uint32;
  point_2_node_idx:uint32;

  // Can you go from vertex_2 to vertex_1?
  backwards_allowed:bool;

  // Seconds!
  car_travel_cost:uint16;
  bike_travel_cost:uint16;
  walk_travel_cost:uint16;
}

table GraphBlob {
    name:string;

    // https://www.youtube.com/watch?v=B7-_hb28Wmk
    edges:[Edge];
    nodes:[Node];
}
