namespace tobmapgraph;
enum RoadInteraction : byte {
    None = 0,
    Yield = 1,
    StopSign = 2,
    TrafficLight = 3,
}

struct Interactions {
    incoming:RoadInteraction;
    outgoing:RoadInteraction;
}

// A node represents a real-world intersection
table Node {
  // related edges, with their interactions for 
  // incoming, outgoing pairs
  edges:[uint32];
  interactions:[Interactions];
}

// An edge represents a way (street, path, etc.) between two nodes
struct Edge {
  point_1_node_idx:uint32;
  point_2_node_idx:uint32;

  // from left, bits
  // - 13 for cost
  costs_and_flags:uint16;
}

table GraphBlob {
    name:string;

    // https://www.youtube.com/watch?v=B7-_hb28Wmk
    edges:[Edge];
    nodes:[Node];
}

table EdgeLocationItems {
  points:[uint64]; // All of the points on the edge as S2CellIds
}

table NodeLocationItems {
  cell_id:uint64; // The cell id of the node
}

// Used for snapping and for the line
table LocationBlob {
  // Parallel w/ GraphBlob edges
  edge_location_items:[EdgeLocationItems];
  // Parallel w/ GraphBlob nodes
  node_location_items:[NodeLocationItems];
}

// Used for route description
//table DescriptionBlob {
  // Parallel w/ GraphBlob edges
//  edge_descriptions:[EdgeDescriptionThings];
//}

// 
//table EdgeDescriptionThings {
//  street_names:[string];
//}